What happens when you initialize a repository? Why do you need to do it?

	When I init a repository, a directory called .git is created in hiden form in the directory where I execute de command. I need to do this in case I want to maintain version control of the files that are in the directory.
	

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The Staging Area help me to save a pre-version to commit. It Permit me select a set of files to prepare and determinate if pass to the repository.

How can you use the staging area to make sure you have one commit per logical
change?

	I can compare the staging area version vs working directory version and review what is the kind of change was done.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	I could use the branches to create an control various version and experiments. I could give the code to various developers and permit all of them to make their changes.

How do the diagrams help you visualize the branch structure?

	I can see as a history of commits was applied, where there are parallels branches than after could be a match.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	When merging tho branches, I can obtain a consolidated version with the master and new changes.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

I	n automatic form, is possible that git merge lines that could cause conflict in the code or functionality.